# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2020-02-19 09:24
from __future__ import unicode_literals

import datetime

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.utils.timezone import utc

import registration.models


class Migration(migrations.Migration):

    replaces = [
        (b"registration", "0001_initial"),
        (b"registration", "0002_auto_20160726_2342"),
        (b"registration", "0003_auto_20160727_0114"),
        (b"registration", "0004_auto_20160729_0021"),
        (b"registration", "0005_auto_20160806_1650"),
        (b"registration", "0006_auto_20160806_1733"),
        (b"registration", "0007_auto_20160821_1554"),
        (b"registration", "0008_auto_20160821_1600"),
        (b"registration", "0009_auto_20160821_1340"),
        (b"registration", "0010_auto_20160828_1010"),
        (b"registration", "0011_auto_20160830_2149"),
        (b"registration", "0012_auto_20160830_2154"),
        (b"registration", "0013_auto_20160917_1045"),
        (b"registration", "0014_auto_20160926_1925"),
        (b"registration", "0015_auto_20160926_1927"),
        (b"registration", "0016_priceleveloption_required"),
        (b"registration", "0017_auto_20161009_1154"),
        (b"registration", "0018_auto_20161010_1838"),
        (b"registration", "0019_auto_20161013_1813"),
        (b"registration", "0020_remove_dealer_extratable"),
        (b"registration", "0021_auto_20161013_1941"),
        (b"registration", "0022_auto_20161020_1832"),
        (b"registration", "0023_auto_20161020_1843"),
        (b"registration", "0024_auto_20161020_1910"),
        (b"registration", "0025_tablesize_baseprice"),
        (b"registration", "0026_dealer_buttonoffer"),
        (b"registration", "0027_auto_20161104_2004"),
        (b"registration", "0028_order_status"),
        (b"registration", "0029_dealer_emailed"),
        (b"registration", "0030_auto_20161221_1121"),
        (b"registration", "0031_auto_20161223_1717"),
        (b"registration", "0032_auto_20161223_1732"),
        (b"registration", "0033_discount_used"),
        (b"registration", "0034_auto_20161227_1230"),
        (b"registration", "0035_auto_20161228_1940"),
        (b"registration", "0036_staffjersey"),
        (b"registration", "0037_auto_20161230_1154"),
        (b"registration", "0038_auto_20170128_1001"),
        (b"registration", "0039_auto_20170129_1410"),
        (b"registration", "0040_staffjersey"),
        (b"registration", "0041_auto_20170217_1825"),
        (b"registration", "0042_attendee_printed"),
        (b"registration", "0043_auto_20170310_2243"),
        (b"registration", "0044_auto_20170316_2219"),
        (b"registration", "0045_order_lastfour"),
        (b"registration", "0046_auto_20170427_1003"),
        (b"registration", "0047_auto_20170428_2054"),
        (b"registration", "0048_auto_20170511_2022"),
        (b"registration", "0049_auto_20170511_2106"),
        (b"registration", "0050_attendee_surveyok"),
        (b"registration", "0051_orderitem_badge"),
        (b"registration", "0052_auto_20170715_1734"),
        (b"registration", "0053_auto_20170916_1047"),
        (b"registration", "0054_auto_20170920_2254"),
        (b"registration", "0055_auto_20171009_1134"),
        (b"registration", "0056_dealer_asstbreakfast"),
        (b"registration", "0057_tablesize_event"),
        (b"registration", "0058_banlist"),
        (b"registration", "0059_attendee_aslrequest"),
        (b"registration", "0060_auto_20180315_1852"),
        (b"registration", "0061_cashdrawer_firebase"),
        (b"registration", "0062_auto_20180416_0020"),
        (b"registration", "0063_auto_20180419_0210"),
        (b"registration", "0064_event_default"),
        (b"registration", "0065_auto_20180425_2022"),
        (b"registration", "0066_temptoken"),
        (b"registration", "0067_auto_20180512_2055"),
        (b"registration", "0068_auto_20180512_2104"),
        (b"registration", "0069_temptoken_sent"),
        (b"registration", "0070_auto_20180719_1728"),
        (b"registration", "0071_auto_20180721_2029"),
        (b"registration", "0072_dealerasst"),
        (b"registration", "0073_dealerasst_event"),
        (b"registration", "0074_staff_checkedin"),
        (b"registration", "0075_dealer_logo"),
        (b"registration", "0076_event_allowonlineminorreg"),
        (b"registration", "0077_priceleveloption_rank"),
        (b"registration", "0078_priceleveloption_description"),
        (b"registration", "0079_pricelevel_isminor"),
        (b"registration", "0080_cart"),
        (b"registration", "0080_banlist_reason"),
        (b"registration", "0060_priceleveloption_optionimage"),
        (b"registration", "0066_merge_20180726_1722"),
        (b"registration", "0067_auto_20180802_2106"),
        (b"registration", "0068_auto_20180802_2110"),
        (b"registration", "0069_auto_20180802_2118"),
        (b"registration", "0081_merge_20181231_1518"),
        (b"registration", "0082_auto_20181231_1519"),
        (b"registration", "0083_auto_20200207_0355"),
        (b"registration", "0084_reservedbadgenumbers"),
    ]

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Attendee",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("firstName", models.CharField(max_length=200)),
                ("lastName", models.CharField(max_length=200)),
                ("address1", models.CharField(max_length=200)),
                ("address2", models.CharField(blank=True, max_length=200)),
                ("city", models.CharField(max_length=200)),
                ("state", models.CharField(max_length=200)),
                ("country", models.CharField(max_length=200)),
                ("postalCode", models.CharField(max_length=20)),
                ("phone", models.CharField(max_length=20)),
                ("email", models.CharField(max_length=200)),
                ("birthdate", models.DateField()),
                ("badgeName", models.CharField(blank=True, max_length=200)),
                ("badgeNumber", models.IntegerField(null=True)),
                ("badgePrinted", models.BooleanField(default=False)),
                ("emailsOk", models.BooleanField(default=False)),
                ("volunteerContact", models.BooleanField(default=False)),
                ("volunteerDepts", models.CharField(max_length=1000)),
                ("notes", models.TextField()),
                ("parentFirstName", models.CharField(blank=True, max_length=200)),
                ("parentLastName", models.CharField(blank=True, max_length=200)),
                ("parentPhone", models.CharField(blank=True, max_length=20)),
                ("parentEmail", models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="AttendeeOptions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("optionExtraValue", models.CharField(max_length=200)),
                (
                    "attendee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Attendee",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dealer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("approved", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200)),
                ("volunteerListOk", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Discount",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codeName", models.CharField(max_length=100)),
                ("percentOff", models.IntegerField(null=True)),
                (
                    "amountOff",
                    models.DecimalField(decimal_places=2, max_digits=6, null=True),
                ),
                ("startDate", models.DateTimeField()),
                ("endDate", models.DateTimeField()),
                ("notes", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "attendeeRegEnd",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2020, 2, 19, 12, 24, 35, 170434, tzinfo=utc
                        )
                    ),
                ),
                (
                    "attendeeRegStart",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2020, 2, 19, 12, 24, 35, 170434, tzinfo=utc
                        )
                    ),
                ),
                (
                    "dealerRegEnd",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2020, 2, 19, 12, 24, 35, 170434, tzinfo=utc
                        )
                    ),
                ),
                (
                    "dealerRegStart",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2020, 2, 19, 12, 24, 35, 170434, tzinfo=utc
                        )
                    ),
                ),
                (
                    "onlineRegEnd",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2020, 2, 19, 12, 24, 35, 170434, tzinfo=utc
                        )
                    ),
                ),
                (
                    "onlineRegStart",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2020, 2, 19, 12, 24, 35, 170434, tzinfo=utc
                        )
                    ),
                ),
                (
                    "staffRegEnd",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2020, 2, 19, 12, 24, 35, 170434, tzinfo=utc
                        )
                    ),
                ),
                (
                    "staffRegStart",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2020, 2, 19, 12, 24, 35, 170434, tzinfo=utc
                        )
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="HoldType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=6),
                ),
                ("authorizationCode", models.CharField(max_length=100)),
                ("transactionId", models.CharField(max_length=100)),
                ("createdDate", models.DateTimeField(auto_now_add=True)),
                ("settledDate", models.DateTimeField(null=True)),
                ("notes", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("confirmationCode", models.CharField(max_length=100)),
                ("enteredBy", models.CharField(max_length=100)),
                (
                    "attendee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Attendee",
                    ),
                ),
                (
                    "discount",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Discount",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PriceLevel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("basePrice", models.DecimalField(decimal_places=2, max_digits=6)),
                ("startDate", models.DateTimeField()),
                ("endDate", models.DateTimeField()),
                ("public", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                ("group", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="PriceLevelOption",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("optionName", models.CharField(max_length=200)),
                ("optionPrice", models.DecimalField(decimal_places=2, max_digits=6)),
                ("optionExtraType", models.CharField(blank=True, max_length=100)),
                ("required", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=False)),
                ("optionExtraType2", models.CharField(blank=True, max_length=100)),
                ("optionExtraType3", models.CharField(blank=True, max_length=100)),
                ("rank", models.IntegerField(default=0)),
                ("description", models.TextField(blank=True)),
                (
                    "optionImage",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=registration.models.content_file_name,
                    ),
                ),
            ],
            options={
                "verbose_name": "Price level option",
                "verbose_name_plural": "Price level options (merchandise)",
            },
        ),
        migrations.CreateModel(
            name="ShirtSizes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attendee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="registration.Attendee",
                    ),
                ),
                ("contactName", models.CharField(blank=True, max_length=200)),
                ("contactPhone", models.CharField(blank=True, max_length=200)),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="registration.Department",
                    ),
                ),
                ("gender", models.CharField(blank=True, max_length=50)),
                ("needRoom", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                (
                    "registrationToken",
                    models.CharField(
                        default=registration.models.getRegistrationToken, max_length=200
                    ),
                ),
                ("specialFood", models.TextField(blank=True)),
                ("specialMedical", models.TextField(blank=True)),
                ("specialSkills", models.TextField(blank=True)),
                (
                    "supervisor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="registration.Staff",
                    ),
                ),
                ("telegram", models.CharField(blank=True, max_length=200)),
                ("timesheetAccess", models.BooleanField(default=False)),
                ("title", models.CharField(blank=True, max_length=200)),
                ("twitter", models.CharField(blank=True, max_length=200)),
                ("contactRelation", models.CharField(blank=True, max_length=200)),
                (
                    "shirtsize",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="registration.ShirtSizes",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="orderitem",
            name="priceLevel",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="registration.PriceLevel",
            ),
        ),
        migrations.AddField(
            model_name="attendeeoptions",
            name="option",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.PriceLevelOption",
            ),
        ),
        migrations.AddField(
            model_name="attendee",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="registration.Event"
            ),
        ),
        migrations.AddField(
            model_name="attendee",
            name="holdType",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="registration.HoldType",
            ),
        ),
        migrations.AddField(
            model_name="attendee",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="registration.Attendee",
            ),
        ),
        migrations.AlterField(
            model_name="attendee",
            name="volunteerDepts",
            field=models.CharField(blank=True, max_length=1000),
        ),
        migrations.AlterField(
            model_name="attendee",
            name="badgeNumber",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="attendee", name="notes", field=models.TextField(blank=True),
        ),
        migrations.RenameField(
            model_name="order", old_name="createdDate", new_name="created",
        ),
        migrations.RemoveField(model_name="order", name="authorizationCode",),
        migrations.RemoveField(model_name="order", name="balance",),
        migrations.RemoveField(model_name="order", name="notes",),
        migrations.RemoveField(model_name="order", name="settledDate",),
        migrations.RemoveField(model_name="order", name="transactionId",),
        migrations.AddField(
            model_name="order",
            name="total",
            field=models.DecimalField(decimal_places=2, max_digits=8),
        ),
        migrations.RemoveField(model_name="attendeeoptions", name="attendee",),
        migrations.RemoveField(model_name="orderitem", name="attendee",),
        migrations.RemoveField(model_name="orderitem", name="discount",),
        migrations.AlterField(
            model_name="orderitem",
            name="order",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="registration.Order"
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="order",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.Order",
            ),
        ),
        migrations.AddField(
            model_name="attendeeoptions",
            name="orderItem",
            field=models.ForeignKey(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.OrderItem",
            ),
            preserve_default=False,
        ),
        migrations.RenameField(
            model_name="attendeeoptions",
            old_name="optionExtraValue",
            new_name="optionValue",
        ),
        migrations.AddField(
            model_name="order",
            name="charityDonation",
            field=models.DecimalField(
                decimal_places=2, default=0, max_digits=8, null=True
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="discount",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="registration.Discount",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="orgDonation",
            field=models.DecimalField(
                decimal_places=2, default=0, max_digits=8, null=True
            ),
        ),
        migrations.RemoveField(model_name="order", name="created",),
        migrations.AddField(
            model_name="attendee",
            name="registeredDate",
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name="order",
            name="createdDate",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="order", name="notes", field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="order",
            name="reference",
            field=models.CharField(default="", max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="order",
            name="settledDate",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="orderitem",
            name="enteredDate",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="order",
            name="billingAddress1",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="order",
            name="billingAddress2",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="order",
            name="billingCity",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="order",
            name="billingCountry",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="order",
            name="billingEmail",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="order",
            name="billingName",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="order",
            name="billingPostal",
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name="order",
            name="billingState",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.CreateModel(
            name="TableSize",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(default="")),
                ("chairMax", models.IntegerField(default=1)),
                ("chairMin", models.IntegerField(default=1)),
                ("tableMax", models.IntegerField(default=0)),
                ("tableMin", models.IntegerField(default=0)),
                ("partnerMax", models.IntegerField(default=1)),
                ("partnerMin", models.IntegerField(default=1)),
                (
                    "basePrice",
                    models.DecimalField(decimal_places=2, default=0, max_digits=6),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.AddField(
            model_name="dealer",
            name="attendee",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="registration.Attendee",
            ),
        ),
        migrations.AddField(
            model_name="dealer",
            name="businessName",
            field=models.CharField(default="", max_length=200),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="dealer",
            name="description",
            field=models.TextField(default=""),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="dealer",
            name="farFrom",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="dealer",
            name="license",
            field=models.CharField(default="", max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="dealer",
            name="nearTo",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="dealer",
            name="needPower",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer",
            name="needWifi",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer", name="notes", field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="dealer",
            name="registrationToken",
            field=models.CharField(
                default=registration.models.getRegistrationToken, max_length=200
            ),
        ),
        migrations.AddField(
            model_name="dealer",
            name="tableNumber",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="dealer",
            name="wallSpace",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer",
            name="website",
            field=models.CharField(default="", max_length=500),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="dealer",
            name="agreeToRules",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer",
            name="artShow",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer", name="chairs", field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="dealer",
            name="charityRaffle",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="dealer",
            name="reception",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer",
            name="tableSize",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.TableSize",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="dealer",
            name="breakfast",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer",
            name="willSwitch",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer", name="partners", field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="dealer", name="tables", field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="dealer",
            name="buttonOffer",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="dealer",
            name="discount",
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=6),
        ),
        migrations.AddField(
            model_name="dealer",
            name="discountReason",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="order",
            name="status",
            field=models.CharField(default="Pending", max_length=50),
        ),
        migrations.AddField(
            model_name="dealer",
            name="emailed",
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveField(model_name="orderitem", name="confirmationCode",),
        migrations.AddField(
            model_name="attendee",
            name="registrationToken",
            field=models.CharField(
                default=registration.models.getRegistrationToken, max_length=200
            ),
        ),
        migrations.AddField(
            model_name="discount",
            name="oneTime",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="discount",
            name="reason",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="discount", name="used", field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="attendee",
            name="printed",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="order",
            name="billingType",
            field=models.CharField(
                choices=[
                    ("Unpaid", "Unpaid"),
                    ("Credit", "Credit"),
                    ("Cash", "Cash"),
                    ("Comp", "Comp"),
                ],
                default="Credit",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="AttendeeOnsite",
            fields=[],
            options={
                "verbose_name": "Attendee Onsite 2017",
                "proxy": True,
                "verbose_name_plural": "Attendee Onsite 2017",
            },
            bases=("registration.attendee",),
        ),
        migrations.AddField(
            model_name="attendeeoptions",
            name="optionValue2",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="attendeeoptions",
            name="optionValue3",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="order",
            name="lastFour",
            field=models.CharField(blank=True, max_length=4),
        ),
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registeredDate", models.DateTimeField(null=True)),
                (
                    "registrationToken",
                    models.CharField(
                        default=registration.models.getRegistrationToken, max_length=200
                    ),
                ),
                ("badgeName", models.CharField(blank=True, max_length=200)),
                ("badgeNumber", models.IntegerField(blank=True, null=True)),
                ("printed", models.BooleanField(default=False)),
                (
                    "attendee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Attendee",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Event",
                    ),
                ),
                ("printCount", models.IntegerField(default=0)),
            ],
        ),
        migrations.AddField(
            model_name="pricelevel",
            name="priceLevelOptions",
            field=models.ManyToManyField(
                blank=True, to=b"registration.PriceLevelOption"
            ),
        ),
        migrations.AddField(
            model_name="attendee",
            name="surveyOk",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="orderitem",
            name="badge",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.Badge",
            ),
        ),
        migrations.DeleteModel(name="AttendeeOnsite",),
        migrations.AddField(
            model_name="pricelevel",
            name="emailVIP",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="pricelevel",
            name="emailVIPEmails",
            field=models.CharField(blank=True, default="", max_length=400),
        ),
        migrations.RemoveField(model_name="attendee", name="badgeName",),
        migrations.RemoveField(model_name="attendee", name="badgeNumber",),
        migrations.RemoveField(model_name="attendee", name="badgePrinted",),
        migrations.RemoveField(model_name="attendee", name="event",),
        migrations.RemoveField(model_name="attendee", name="printed",),
        migrations.RemoveField(model_name="attendee", name="registeredDate",),
        migrations.RemoveField(model_name="attendee", name="registrationToken",),
        migrations.AddField(
            model_name="dealer",
            name="event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="registration.Event",
            ),
        ),
        migrations.AddField(
            model_name="staff",
            name="event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.Event",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="eventEnd",
            field=models.DateField(verbose_name="Event End Date"),
        ),
        migrations.AddField(
            model_name="event",
            name="eventStart",
            field=models.DateField(verbose_name="Event Start Date"),
        ),
        migrations.AddField(
            model_name="dealer",
            name="asstBreakfast",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="tablesize",
            name="event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.Event",
            ),
        ),
        migrations.CreateModel(
            name="BanList",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("firstName", models.CharField(blank=True, max_length=200)),
                ("lastName", models.CharField(blank=True, max_length=200)),
                ("email", models.CharField(blank=True, max_length=400)),
                ("reason", models.TextField(blank=True)),
            ],
            options={"verbose_name_plural": "Ban list",},
        ),
        migrations.AddField(
            model_name="attendee",
            name="aslRequest",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="Cashdrawer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("Open", "Open"),
                            ("Close", "Close"),
                            ("Transaction", "Transaction"),
                            ("Deposit", "Deposit"),
                        ],
                        default="Open",
                        max_length=20,
                    ),
                ),
                ("total", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "tendered",
                    models.DecimalField(
                        blank=True, decimal_places=2, default=0, max_digits=8
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Firebase",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=500)),
                ("name", models.CharField(max_length=100)),
                ("closed", models.BooleanField(default=False)),
                ("cashdrawer", models.BooleanField(default=False)),
                (
                    "printer_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="default",
            field=models.BooleanField(
                default=False,
                help_text="The first default event will be used as the basis for all current event configuration",
                verbose_name="Default",
            ),
        ),
        migrations.CreateModel(
            name="TempToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        default=registration.models.getRegistrationToken, max_length=200
                    ),
                ),
                ("email", models.CharField(max_length=200)),
                ("validUntil", models.DateTimeField()),
                ("used", models.BooleanField(default=False)),
                ("usedDate", models.DateTimeField(blank=True, null=True)),
                ("sent", models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="newStaffDiscount",
            field=models.ForeignKey(
                blank=True,
                help_text="Apply a discount for new staff registrations",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="newStaffEvent",
                to="registration.Discount",
                verbose_name="New Staff Discount",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="staffDiscount",
            field=models.ForeignKey(
                blank=True,
                help_text="Apply a discount for any staff registrations",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="staffEvent",
                to="registration.Discount",
                verbose_name="Staff Discount",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="dealerDiscount",
            field=models.ForeignKey(
                blank=True,
                help_text="Apply a discount for any dealer registrations",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="dealerEvent",
                to="registration.Discount",
                verbose_name="Dealer Discount",
            ),
        ),
        migrations.CreateModel(
            name="DealerAsst",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "registrationToken",
                    models.CharField(
                        default=registration.models.getRegistrationToken, max_length=200
                    ),
                ),
                ("name", models.CharField(max_length=400)),
                ("email", models.CharField(max_length=200)),
                ("license", models.CharField(max_length=50)),
                ("sent", models.BooleanField(default=False)),
                (
                    "attendee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Attendee",
                    ),
                ),
                (
                    "dealer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Dealer",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Event",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dealer assistant",
                "verbose_name_plural": "Dealer assistants",
            },
        ),
        migrations.AddField(
            model_name="staff",
            name="checkedIn",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="dealer",
            name="logo",
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name="event",
            name="allowOnlineMinorReg",
            field=models.BooleanField(
                default=False,
                help_text="Allow registration for anyone age 13 and older online. Otherwise, registration is restricted to those 18 or older.",
                verbose_name="Allow online minor registration",
            ),
        ),
        migrations.AddField(
            model_name="pricelevel",
            name="isMinor",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "form",
                    models.CharField(
                        choices=[
                            ("Attendee", "Attendee"),
                            ("Staff", "Staff"),
                            ("Dealer", "Dealer"),
                            ("Dealer Assistant", "Dealer Assistant"),
                        ],
                        max_length=50,
                    ),
                ),
                ("formData", models.TextField()),
                ("formHeaders", models.TextField()),
                ("enteredDate", models.DateTimeField(auto_now_add=True, null=True)),
                ("transferedDate", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Charity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        help_text="Charity link",
                        max_length=500,
                        verbose_name="URL",
                    ),
                ),
            ],
            options={"abstract": False, "verbose_name_plural": "Charities",},
        ),
        migrations.AlterModelOptions(
            name="order",
            options={"permissions": (("issue_refund", "Can create refunds"),)},
        ),
        migrations.AddField(
            model_name="event",
            name="badgeTheme",
            field=models.CharField(
                default="apis",
                help_text="Name of badge theme to use for printing",
                max_length=200,
                verbose_name="Badge Theme",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="codeOfConduct",
            field=models.CharField(
                blank=True,
                default="/code-of-conduct",
                help_text="Link to code of conduct agreement",
                max_length=500,
                verbose_name="Code of Conduct",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="collectAddress",
            field=models.BooleanField(
                default=True,
                help_text="Disable to skip collecting a mailing address for each attendee.",
                verbose_name="Collect Address",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="collectBillingAddress",
            field=models.BooleanField(
                default=True,
                help_text="Disable to skip collecting a billing address for each order. Note that a billing address and buyer email is required to qualify for Square's Chargeback protection.",
                verbose_name="Collect Billing Address",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="dealerEmail",
            field=models.CharField(
                blank=True,
                default=b"registration@example.com",
                help_text="Email to display on error messages for dealer registration",
                max_length=200,
                verbose_name="Dealer Email",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="registrationEmail",
            field=models.CharField(
                blank=True,
                default=b"registration@example.com",
                help_text="Email to display on error messages for attendee registration",
                max_length=200,
                verbose_name="Registration Email",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="staffEmail",
            field=models.CharField(
                blank=True,
                default=b"registration@example.com",
                help_text="Email to display on error messages for staff registration",
                max_length=200,
                verbose_name="Staff Email",
            ),
        ),
        migrations.AddField(
            model_name="order", name="apiData", field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name="attendee",
            name="address1",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AlterField(
            model_name="attendee",
            name="city",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AlterField(
            model_name="attendee",
            name="country",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AlterField(
            model_name="attendee",
            name="postalCode",
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AlterField(
            model_name="attendee",
            name="state",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AlterField(
            model_name="dealer",
            name="event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.Event",
            ),
        ),
        migrations.AlterField(
            model_name="dealer",
            name="tableSize",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="registration.TableSize",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="attendeeRegEnd",
            field=models.DateTimeField(verbose_name="Attendee Registration End"),
        ),
        migrations.AlterField(
            model_name="event",
            name="attendeeRegStart",
            field=models.DateTimeField(verbose_name="Attendee Registration Start"),
        ),
        migrations.AlterField(
            model_name="event",
            name="dealerRegEnd",
            field=models.DateTimeField(verbose_name="Dealer Registration End"),
        ),
        migrations.AlterField(
            model_name="event",
            name="dealerRegStart",
            field=models.DateTimeField(
                help_text="Start date and time for dealer applications",
                verbose_name="Dealer Registration Start",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="onlineRegEnd",
            field=models.DateTimeField(verbose_name="On-site Registration End"),
        ),
        migrations.AlterField(
            model_name="event",
            name="onlineRegStart",
            field=models.DateTimeField(
                help_text="Start time for /registration/onsite form",
                verbose_name="On-site Registration Start",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="staffRegEnd",
            field=models.DateTimeField(verbose_name="Staff Registration End"),
        ),
        migrations.AlterField(
            model_name="event",
            name="staffRegStart",
            field=models.DateTimeField(
                help_text="(Not currently enforced)",
                verbose_name="Staff Registration Start",
            ),
        ),
        migrations.AlterField(
            model_name="staff",
            name="attendee",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.Attendee",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="charity",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="registration.Charity",
            ),
        ),
        migrations.AlterModelOptions(
            name="attendeeoptions",
            options={
                "verbose_name": "Attendee option",
                "verbose_name_plural": "Attendee options",
            },
        ),
        migrations.AlterModelOptions(
            name="order",
            options={
                "permissions": (
                    ("issue_refund", "Can create refunds"),
                    ("cash", "Can handle cash transactions"),
                    ("cash_admin", "Can open and close cash drawer amounts (manager)"),
                    ("discount", "Can create discounts of arbitrary amount"),
                )
            },
        ),
        migrations.AlterModelOptions(
            name="shirtsizes", options={"verbose_name_plural": "Shirt sizes"},
        ),
        migrations.AlterModelOptions(
            name="staff", options={"verbose_name_plural": "Staff"},
        ),
        migrations.AddField(
            model_name="cashdrawer",
            name="position",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="firebase_cashdrawer",
                to="registration.Firebase",
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingAddress1",
            field=models.CharField(
                blank=True, max_length=200, verbose_name="Address 1"
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingAddress2",
            field=models.CharField(
                blank=True, max_length=200, verbose_name="Address 2"
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingCity",
            field=models.CharField(blank=True, max_length=200, verbose_name="City"),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingCountry",
            field=models.CharField(blank=True, max_length=200, verbose_name="Country"),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingEmail",
            field=models.CharField(blank=True, max_length=200, verbose_name="Email"),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingName",
            field=models.CharField(blank=True, max_length=200, verbose_name="Name"),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingPostal",
            field=models.CharField(
                blank=True, max_length=20, verbose_name="Postal Code"
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingState",
            field=models.CharField(blank=True, max_length=200, verbose_name="State"),
        ),
        migrations.AlterField(
            model_name="order",
            name="billingType",
            field=models.CharField(
                choices=[
                    ("Unpaid", "Unpaid"),
                    ("Credit", "Credit"),
                    ("Cash", "Cash"),
                    ("Comp", "Comp"),
                ],
                default="Credit",
                max_length=20,
                verbose_name="Billing Type",
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="charityDonation",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                max_digits=8,
                null=True,
                verbose_name="Charity Donation",
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="createdDate",
            field=models.DateTimeField(
                auto_now_add=True, null=True, verbose_name="Created Date"
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="lastFour",
            field=models.CharField(blank=True, max_length=4, verbose_name="Last 4"),
        ),
        migrations.AlterField(
            model_name="order",
            name="orgDonation",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                max_digits=8,
                null=True,
                verbose_name="Organization Donation",
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="settledDate",
            field=models.DateTimeField(
                auto_now_add=True, null=True, verbose_name="Settled Date"
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="status",
            field=models.CharField(
                choices=[
                    ("Pending", "Pending"),
                    ("Captured", "Captured"),
                    ("Completed", "Completed"),
                    ("Refunded", "Refunded"),
                    ("Refund Pending", "Refund Pending"),
                    ("Failed", "Failed"),
                ],
                default="Pending",
                max_length=50,
            ),
        ),
        migrations.CreateModel(
            name="ReservedBadgeNumbers",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("badgeNumber", models.IntegerField()),
                ("notes", models.TextField(blank=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="registration.Event",
                    ),
                ),
                (
                    "priceLevel",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="registration.PriceLevel",
                    ),
                ),
            ],
        ),
    ]
